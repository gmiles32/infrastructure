compose_schema_version: '3'
containers:
  - service_name: vaultwarden
    active: true
    image: vaultwarden/server:1.30.3@sha256:153defd78a3ede850445d64d6fca283701d0c25978e513c61688cf63bd47a14a
    container_name: vaultwarden
    user: 1000:1000
    volumes:
      - ./data:/data/
    networks:
      - frontend
      - default
    environment:
      - SMTP_HOST={{ smtp_endpoint }}
      - SMTP_FROM={{ vw_smtp_address }}
      - SMTP_FROM_NAME=Vaultwarden
      - SMTP_SECURITY=force_tls 
      - SMTP_PORT=465        
      - SMTP_USERNAME={{ smtp_username }}
      - SMTP_PASSWORD={{ smtp_password }}
      - SMTP_TIMEOUT=25
      - SIGNUPS_ALLOWED=false
      - DOMAIN=https://vw.{{ domain }}
      - SHOW_PASSWORD_HINT=false
      - DATABASE_URL=postgresql://vaultwarden:{{ vw_pg_passwd }}@postgres:5432/vaultwarden
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend
      # Redirect to get the certs
      - traefik.http.middlewares.redirect-https.redirectScheme.scheme=https
      - traefik.http.middlewares.redirect-https.redirectScheme.permanent=true
      # routers & services
      - traefik.http.routers.vaultwarden-ui-https.rule=Host(`vw.{{ domain }}`)
      - traefik.http.routers.vaultwarden-ui-https.entrypoints=websecure
      - traefik.http.routers.vaultwarden-ui-https.tls=true
      - traefik.http.routers.vaultwarden-ui-https.service=vaultwarden-ui
      - traefik.http.routers.vaultwarden-ui-http.rule=Host(`vw.{{ domain }}`)
      - traefik.http.routers.vaultwarden-ui-http.entrypoints=web
      - traefik.http.routers.vaultwarden-ui-http.middlewares=redirect-https
      - traefik.http.routers.vaultwarden-ui-http.service=vaultwarden-ui
      - traefik.http.services.vaultwarden-ui.loadbalancer.server.port=80
      - traefik.http.routers.vaultwarden-websocket-https.rule=Host(`vw.local.flaskforge.example.com`) && Path(`/#/login`)
      - traefik.http.routers.vaultwarden-websocket-https.entrypoints=websecure
      - traefik.http.routers.vaultwarden-websocket-https.tls=true
      - traefik.http.routers.vaultwarden-websocket-https.service=vaultwarden-websocket
      - traefik.http.routers.vaultwarden-websocket-http.rule=Host(`vw.{{ domain }}`) && Path(`/#/login`)
      - traefik.http.routers.vaultwarden-websocket-http.entrypoints=web
      - traefik.http.routers.vaultwarden-websocket-http.middlewares=redirect-https
      - traefik.http.routers.vaultwarden-websocket-http.service=vaultwarden-websocket
      - traefik.http.services.vaultwarden-websocket.loadbalancer.server.port=3012

  - service_name: postgres
    active: true
    image: postgres:16@sha256:4d1b17af6f66b852ee3a721f6691a2ca7352f9d28f570a6a48cee4ebe646b2fd
    restart: unless-stopped
    container_name: vaultwarden-postgres
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      - name: test
        value: ["CMD", "pg_isready"]
      - name: interval
        value: 30s
      - name: timeout
        value: 20s
      - name: retries 
        value: 3
    environment:
      - POSTGRES_USER=vaultwarden
      - POSTGRES_PASSWORD={{ vw_pg_passwd }}
      - POSTGRES_DB=vaultwarden
    networks:
      - default

networks:
  - network_name: frontend
    external: true
  - network_name: default

volumes: []

