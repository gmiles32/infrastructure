compose_schema_version: '3.9'
containers:
  - service_name: n8nio
    active: true
    image: docker.n8n.io/n8nio/n8n:1.109.0@sha256:f4d4c22a1a1fa51bbe6e23e0d181b87c9201648657c0d6b0e682d8e198276999
    container_name: n8n
    restart_policy: unless-stopped
    volumes:
        - './data:/home/node/.n8n'
    environment:
        - DB_POSTGRESDB_PASSWORD={{ n8n_pg_password}}
        - DB_POSTGRESDB_USER=n8n
        - DB_POSTGRESDB_HOST=n8n-postgres
        - DB_POSTGRESDB_DATABASE=n8n
        - DB_TYPE=postgresdb
    ports:
        - '5678:5678'
    tty: true
    stdin_open: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.entrypoints=web"
      - "traefik.http.routers.n8n.rule=Host(`n8n.{{ domain }}`)"
      - "traefik.http.middlewares.n8n-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.n8n.middlewares=n8n-https-redirect"
      - "traefik.http.routers.n8n-secure.entrypoints=websecure"
      - "traefik.http.routers.n8n-secure.rule=Host(`n8n.{{ domain }}`)"
      - "traefik.http.routers.n8n-secure.tls=true"
      - "traefik.http.routers.n8n-secure.service=n8n"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.docker.network=frontend"
      # - "traefik.http.routers.n8n-secure.middlewares=authelia@docker"
    networks:
      - frontend
      - default

  - service_name: postgres
    active: true 
    image: postgres:16.10-bookworm@sha256:70c627f0b2f503c085f6504b847c5301faab8803beaa20a11d6a708c45e06e09
    restart: unless-stopped
    container_name: n8n-postgres
    user: 1000:1000
    networks:
      - default
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - "POSTGRES_USER=n8n"
      - "POSTGRES_PASSWORD={{ n8n_pg_password}}"
      - "POSTGRES_DB=n8n"

networks:
  - network_name: frontend
    external: true 
  - network_name: default

volumes: []
