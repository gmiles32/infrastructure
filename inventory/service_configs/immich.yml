compose_schema_version: "3.8"
containers:
  - service_name: immich-server
    active: true
    container_name: immich-server
    image: ghcr.io/immich-app/immich-server:v1.109.2@sha256:79f5d0c375b0df84e4d0ac89103753d6145ec3facb329e860008f2813f647d84
    command: ["start.sh", "immich"]
    volumes:
      - photos:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - "TZ=America/Boise"
      - "TYPESENSE_ENABLED=true"
      - "TYPESENSE_API_KEY={{ immich_tp_api_key}}"
      - "DB_PASSWORD={{ immich_pg_password }}"
      - "DB_HOSTNAME=immich-postgres"
      - "DB_USERNAME=postgres"
      - "DB_DATABASE_NAME=immich"
      - "REDIS_HOSTNAME=immich-redis"
      - "IMMICH_WEB_URL=http://immich-web:3000"
      - "IMMICH_SERVER_URL=http://immich-server:3001"
    depends_on:
      - name: redis
      - name: database
    networks:
      - default
      - frontend
    ports:
      - 2283:3001
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich.entrypoints=web"
      - "traefik.http.routers.immich.rule=Host(`immich.{{ domain }}`)"
      - "traefik.http.middlewares.immich-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.immich.middlewares=immich-https-redirect"
      - "traefik.http.routers.immich-secure.entrypoints=websecure"
      - "traefik.http.routers.immich-secure.rule=Host(`immich.{{ domain }}`)"
      - "traefik.http.routers.immich-secure.tls=true"
      - "traefik.http.routers.immich-secure.service=immich"
      - "traefik.http.services.immich.loadbalancer.server.port=3001"
      - "traefik.docker.network=frontend"
    restart: unless-stopped

  - service_name: immich-microservices
    active: true
    container_name: immich-microservices
    image: ghcr.io/immich-app/immich-server:v1.109.2@sha256:79f5d0c375b0df84e4d0ac89103753d6145ec3facb329e860008f2813f647d84
    command: ["start.sh", "microservices"]
    volumes:
      - photos:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - "TZ=America/Boise"
      - "TYPESENSE_ENABLED=true"
      - "TYPESENSE_API_KEY={{ immich_tp_api_key}}"
      - "DB_PASSWORD={{ immich_pg_password }}"
      - "DB_HOSTNAME=immich-postgres"
      - "DB_USERNAME=postgres"
      - "DB_DATABASE_NAME=immich"
      - "REDIS_HOSTNAME=immich-redis"
      - "IMMICH_WEB_URL=http://immich-web:3000"
      - "IMMICH_SERVER_URL=http://immich-server:3001"
    depends_on:
      - name: redis
      - name: database
    networks:
      - default
    restart: unless-stopped

  - service_name: immich-machine-learning
    active: true
    container_name: immich-machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.109.2@sha256:3ab8e332004c693421320ac7e22065a1187f3d0e84255f97cacf83bce7bdfc1f
    volumes:
      - ./model-cache:/cache
    environment:
      - "TZ=America/Boise"
      - "TYPESENSE_ENABLED=true"
      - "TYPESENSE_API_KEY={{ immich_tp_api_key}}"
      - "DB_PASSWORD={{ immich_pg_password }}"
      - "DB_HOSTNAME=immich-postgres"
      - "DB_USERNAME=immich"
      - "DB_DATABASE_NAME=immich"
      - "REDIS_HOSTNAME=immich-redis"
      - "IMMICH_WEB_URL=http://immich-web:3000"
      - "IMMICH_SERVER_URL=http://immich-server:3001"
    networks:
      - default
    restart: unless-stopped

  - service_name: redis
    active: true
    container_name: immich-redis
    image: redis:6.2-alpine@sha256:e3b17ba9479deec4b7d1eeec1548a253acc5374d68d3b27937fcfe4df8d18c7e
    restart: unless-stopped
    healthcheck:
      - name: test
        value: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  - service_name: database
    active: true
    container_name: immich-postgres
    image: registry.hub.docker.com/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0    
    user: 1000:1000
    environment:
      - "POSTGRES_PASSWORD={{ immich_pg_password }}"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=immich"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - default
    restart: unless-stopped

networks:
  - network_name: frontend
    external: true
  - network_name: default

volumes:
  - volume_name: photos
    driver: local
    driver_opts:
      - name: type
        value: nfs
      - name: o
        value: nfsvers=4,addr={{ nas }},rw
      - name: device
        value: ":/mnt/proton/containers/immich"