compose_schema_version: "3.8"
containers:
  - service_name: immich-server
    active: true
    container_name: immich-server
    image: ghcr.io/immich-app/immich-server:v1.125.3@sha256:da47ef138aef097358da675ff20cdfb2b995c025be489657ae0ad63539511182
    volumes:
      - photos:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - "TZ=America/Los_Angeles"
      - "DB_PASSWORD={{ immich_pg_password }}"
      - "DB_HOSTNAME=immich-postgres"
      - "DB_USERNAME=postgres"
      - "DB_DATABASE_NAME=immich"
      - "REDIS_HOSTNAME=immich-redis"
    depends_on:
      - name: redis
      - name: database
    networks:
      - default
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich.entrypoints=web"
      - "traefik.http.routers.immich.rule=Host(`immich.{{ domain }}`)"
      - "traefik.http.middlewares.immich-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.immich.middlewares=immich-https-redirect"
      - "traefik.http.routers.immich-secure.entrypoints=websecure"
      - "traefik.http.routers.immich-secure.rule=Host(`immich.{{ domain }}`)"
      - "traefik.http.routers.immich-secure.tls=true"
      - "traefik.http.routers.immich-secure.service=immich"
      - "traefik.http.services.immich.loadbalancer.server.port=2283"
      - "traefik.docker.network=frontend"
    restart: unless-stopped

  - service_name: immich-machine-learning
    active: true
    container_name: immich-machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.125.5@sha256:698b9b2d61eee42578cf268dc1490a136554fb186a448b51430f069431d5e754
    volumes:
      - ./model-cache:/cache
    environment:
      - "TZ=America/Los_Angeles"
      - "DB_PASSWORD={{ immich_pg_password }}"
      - "DB_HOSTNAME=immich-postgres"
      - "DB_USERNAME=postgres"
      - "DB_DATABASE_NAME=immich"
      - "REDIS_HOSTNAME=immich-redis"
    networks:
      - default
    restart: unless-stopped

  - service_name: redis
    active: true
    container_name: immich-redis
    image: redis:6.2-alpine@sha256:905c4ee67b8e0aa955331960d2aa745781e6bd89afc44a8584bfd13bc890f0ae
    restart: unless-stopped
    healthcheck:
      - name: test
        value: redis-cli ping || exit 1
    networks:
      - default

  - service_name: database
    active: true
    container_name: immich-postgres
    image: registry.hub.docker.com/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0    
    user: 1000:1000
    environment:
      - "POSTGRES_PASSWORD={{ immich_pg_password }}"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=immich"
      - "POSTGRES_INITDB_ARGS='--data-checksums'"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - default
    restart: unless-stopped
    command:
      [
        'postgres',
        '-c',
        'shared_preload_libraries=vectors.so',
        '-c',
        'search_path="$$user", public, vectors',
        '-c',
        'logging_collector=on',
        '-c',
        'max_wal_size=2GB',
        '-c',
        'shared_buffers=512MB',
        '-c',
        'wal_compression=on',
      ]

networks:
  - network_name: frontend
    external: true
  - network_name: default

volumes:
  - volume_name: photos
    driver: local
    driver_opts:
      - name: type
        value: nfs
      - name: o
        value: nfsvers=4,addr={{ nas }},rw
      - name: device
        value: ":/mnt/proton/containers/immich"
