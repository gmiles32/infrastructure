compose_schema_version: '2.4'
containers:
  - service_name: influxdb
    active: true
    image: influxdb:2.7@sha256:57429ef3f13cf25bbe541a54b2b831c1b339cfcf5bd060934f0a9ee5ed5428ba
    container_name: scrutiny-db
    ports:
      - '8086:8086'
    volumes:
      - './influxdb:/var/lib/influxdb2'
    healthcheck:
      - name: test
        value: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      - name: interval
        value: 5s
      - name: timeout
        value: 10s
      - name: retries
        value: 20
    networks:
      - default

  - service_name: web
    active: true
    image: 'ghcr.io/analogj/scrutiny:master-web@sha256:e45d9af99f66a31e148e93d521d66f595f65dab23981853fa739559c9418e9ed'
    container_name: scrutiny-web
    ports:
      - '8080:8080'
    volumes:
      - './config:/opt/scrutiny/config'
    environment:
      - "SCRUTINY_WEB_INFLUXDB_HOST=influxdb"
    depends_on:
      - name: influxdb
        condition: service_healthy
    healthcheck:
      - name: test
        value: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      - name: interval
        value: 5s
      - name: timeout
        value: 10s
      - name: retries
        value: 20
      - name: start_period
        value: 10s
    networks:
      - default
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.scrutiny.entrypoints=web"
      - "traefik.http.routers.scrutiny.rule=Host(`scrutiny.{{ domain }}`)"
      - "traefik.http.middlewares.scrutiny-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.scrutiny.middlewares=scrutiny-https-redirect"
      - "traefik.http.routers.scrutiny-secure.entrypoints=websecure"
      - "traefik.http.routers.scrutiny-secure.rule=Host(`scrutiny.{{ domain }}`)"
      - "traefik.http.routers.scrutiny-secure.tls=true"
      - "traefik.http.routers.scrutiny-secure.service=scrutiny"
      - "traefik.http.services.scrutiny.loadbalancer.server.port=8080"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.scrutiny-secure.middlewares=authelia@docker"

networks:
  - network_name: frontend
    external: true
  - network_name: default

volumes: []